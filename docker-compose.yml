      version: '3'
      services:
        zookeeper:
          image: confluentinc/cp-zookeeper:latest
          environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
          ports:
            - 22181:2181

        kafka:
          image: confluentinc/cp-kafka:latest
          depends_on:
            - zookeeper
          ports:
            - 29092:29092
          environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 4
            KAFKA_CREATE_TOPICS: my-topic:3:1


        akhq:
          # build:
          #   context: .
          image: tchiotludo/akhq
          environment:
            AKHQ_CONFIGURATION: |
              akhq:
                connections:
                  docker-kafka-server:
                    properties:
                      bootstrap.servers: "kafka:9092"
                    schema-registry:
                      url: "http://schema-registry:8085"
                    connect:
                      - name: "connect"
                        url: "http://connect:8083"

          ports:
            - 9090:8080
          links:
            - kafka
            - schema-registry
        schema-registry:
          image: confluentinc/cp-schema-registry
          depends_on:
            - kafka
          environment:
            SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
            SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
            SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
            SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'
      volumes:
        redis-sentinel_data:
          driver: local
        redis_data:
          driver: local
